# /etc/nginx/nginx.conf
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

# Section 'events' obligatoire
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Paramètres de log
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Server principal : écoute sur le port 443 avec SSL
    server {
        listen 443 ssl;
        server_name ttt.skfs2m.com;

        ssl_certificate /etc/ssl/certs/self-signed.crt;
        ssl_certificate_key /etc/ssl/certs/self-signed.key;

        # 1. Application Frontend - React.js (Port 7003)
        location / {
            proxy_pass http://frontend:7003;  # Redirige les requêtes vers le port 7003
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 2. API Version 1 - Application Backend (Port 7001)
        location /v1 {
            proxy_pass http://app1:7001/api/version;  # Redirige vers /api/version de l'API v1
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 3. API Version 2 - Application Backend (Port 7002)
        location /v2 {
            proxy_pass http://app2:7002/api/version;  # Redirige vers /app/version de l'API v2
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Serveur HTTP qui redirige vers HTTPS
    server {
        listen 80;
        server_name ttt.skfs2m.com;
        return 301 https://$host$request_uri;
    }
}
